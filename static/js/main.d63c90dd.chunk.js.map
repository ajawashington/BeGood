{"version":3,"sources":["components/nav/logo.jpg","components/charity/formation.jpg","components/charity/CharityRequestProvider.js","components/donations/DonationProvider.js","components/charity/CharityRequest.js","components/charity/CharityRequestList.js","components/businesses/BusinessProvider.js","components/charity/CharityRequestForm.js","components/donations/Donation.js","components/donations/DonationList.js","components/businesses/BusinessTypeProvider.js","components/donations/DonorProvider.js","components/ProviderProvider.js","components/businesses/Business.js","components/businesses/BusinessList.js","components/businesses/BusinessDetails.js","components/ApplicationViews.js","components/nav/NavBar.js","components/auth/Login.js","components/auth/Register.js","index.js","components/BeyGood.js"],"names":["module","exports","CharityRequestContext","React","createContext","CharityRequestProvider","props","useState","charityRequests","setCharityRequests","getCharityRequests","fetch","then","res","json","useEffect","console","log","Provider","value","addCharityRequest","charityRequest","method","headers","body","JSON","stringify","deleteCharityRequest","id","updateCharityRequest","children","DonationContext","DonationProvider","donations","setDonations","getDonations","addDonation","donation","history","match","useContext","completedCharityRequest","issue","amount","item","userId","businessId","donorId","parseInt","localStorage","getItem","className","src","user","url","tagName","business","name","onClick","push","donor","window","alert","activeUserRequests","activeCharityRequest","sort","c","map","CharityRequest","key","BusinessContext","BusinessProvider","businesses","setBusinesses","getBusinesses","addBusiness","updateBusiness","setCharityRequest","useRef","editMode","params","hasOwnProperty","handleControlledInputChange","evt","newCharityRequest","Object","assign","target","charityRequestId","selectedCharityRequest","find","a","setDefaults","htmlFor","type","defaultValue","required","autoFocus","placeholder","proptype","onChange","ref","b","preventDefault","current","constructNewCharityRequest","activeUserDonations","filter","d","cr","activeUserCompletedRequests","dr","Donation","BusinessTypeContext","BusinessTypeProvider","businessTypes","setBusinessTypes","DonorContext","DonorProvider","donors","setDonors","getDonors","addDonor","to","businessType","l","businessTypeId","Business","chosenBusinessId","businessRequests","businessDonations","address","br","ProviderProvider","exact","path","render","BusinessList","BusinessDetails","CharityRequestForm","DonationList","CharityRequestList","logo","e","removeItem","Login","password","onSubmit","_","length","exists","setItem","response","Register","verifyPassword","style","textAlign","createdUser","ReactDOM","ApplicationViews","document","getElementById"],"mappings":"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","file":"static/js/main.d63c90dd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.44a0b38e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/formation.9ec30610.jpg\";","import React, { useState, useEffect } from \"react\"\n\n/*\n    The context is imported and used by individual components\n    that need data\n*/\nexport const CharityRequestContext = React.createContext()\n\n/*\n This component establishes what data can be used.\n */\nexport const CharityRequestProvider = (props) => {\n    const [charityRequests, setCharityRequests] = useState([])\n\n    const getCharityRequests = () => {\n        return fetch(\"http://localhost:4444/charityRequests?_expand=user&_expand=business\")\n            .then(res => res.json())\n            .then(setCharityRequests)\n    }\n\n    const addCharityRequest = charityRequest => {\n        return fetch(\"http://localhost:4444/charityRequests\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(charityRequest)\n        })\n            .then(getCharityRequests)\n    }\n\n    const deleteCharityRequest = charityRequest => {\n        return fetch(`http://localhost:4444/charityRequests/${charityRequest.id}`, {\n            method: \"DELETE\",\n        })\n            .then(getCharityRequests)\n    }\n\n    const updateCharityRequest = charityRequest => {\n        return fetch(`http://localhost:4444/charityRequests/${charityRequest.id}`, {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(charityRequest)\n        })\n            .then(getCharityRequests)\n    }\n\n    /*\n        Load all animals when the component is mounted. Ensure that\n        an empty array is the second argument to avoid infinite loop.\n    */\n    useEffect(() => {\n        getCharityRequests()\n    }, [])\n\n    useEffect(() => {\n        console.log(\"****  CharityRequest APPLICATION STATE CHANGED  ****\")\n    }, [charityRequests])\n\n    return (\n        <CharityRequestContext.Provider value={{\n            charityRequests, addCharityRequest, deleteCharityRequest, updateCharityRequest\n        }}>\n            {props.children}\n        </CharityRequestContext.Provider>\n    )\n}","import React, { useState, useEffect } from \"react\"\n\n/*\n    The context is imported and used by individual components\n    that need data\n*/\nexport const DonationContext = React.createContext()\n\n/*\n This component establishes what data can be used.\n */\nexport const DonationProvider = (props) => {\n    const [donations, setDonations] = useState([])\n\n    const getDonations = () => {\n        return fetch(\"http://localhost:4444/donations?_expand=donor&_expand=user&_expand=business\")\n            .then(res => res.json())\n            .then(setDonations)\n    }\n\n    const addDonation = donation => {\n        return fetch(\"http://localhost:4444/donations\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(donation)\n        })\n            .then(getDonations)\n\n    }\n    useEffect(() => {\n        getDonations()\n    }, [])\n\n    useEffect(() => {\n        console.log(\"****  DONATION APPLICATION STATE CHANGED  ****\")\n    }, [donations])\n\n    return (\n        <DonationContext.Provider value={{\n            donations, addDonation\n        }}>\n            {props.children}\n        </DonationContext.Provider>\n    )\n}","import React, { useContext } from \"react\"\nimport \"./CharityRequests.css\"\nimport { CharityRequestContext } from \"./CharityRequestProvider\";\nimport { DonationContext } from \"../donations/DonationProvider\";\nimport formation from \"./formation.jpg\"\n\n\nexport default ({ charityRequest, history, match }) => {\n    const { deleteCharityRequest } = useContext(CharityRequestContext)\n    const { addDonation } = useContext(DonationContext)\n  \n\n      const completedCharityRequest = () => {\n            addDonation({\n                id: charityRequest.id,\n                issue: charityRequest.issue,\n                amount: charityRequest.amount,\n                item: charityRequest.item,\n                userId: charityRequest.userId,\n                businessId: charityRequest.businessId, \n                donorId: parseInt(localStorage.getItem(\"beyGood_user\"), 10),\n            })}\n\n            // here is what the function will be looking for to POST to database. this is was going to happen \n            // when \"donate\" button is pressed. STRETCH: dialog box to \"confirm donation\"\n       \n\n\n    const activeUserRequests = (charityRequest, history ) => {\n\n        // here is how our Charity Request will be render when it is being called \n        // and what events it will be listening to \n        // if the request user id matches the active user than edit and delete buttons will render\n        // those buttons push the object to \"editMode\" on list or deletes from database\n\n    if(charityRequest.userId === parseInt(localStorage.getItem(\"beyGood_user\"), 10)){\n    return(\n    \n    <div> \n       <button className=\"active__charityRequest\" onClick={() => {\n        \n                history.push(`/${charityRequest.id}`)\n            \n            }}>Edit</button>\n\n        <button onClick={\n            () => {\n                if(match.url === \"/\"){\n                    deleteCharityRequest(charityRequest)\n                }\n                // this is here so that requests can be deleted on active user Profile page\n                else{\n                    deleteCharityRequest(charityRequest)\n                    .then(() => {\n                        history.push(\"/donor\")            \n                    })\n                }\n               \n            }}>\n        Delete\n        </button>\n    \n    </div>\n    \n    )} else { \n    \n        return (\n          <button className=\"donate\" id={ `charityRequest--${charityRequest.donor}` }\n    \n    onClick={\n        () => {\n            window.alert(\"'OK' to Confirm Donation\")\n                completedCharityRequest(charityRequest)\n                deleteCharityRequest(charityRequest)\n            \n           \n        }}>DONATE</button>\n        )\n    }}\n\n            return(\n                <>\n                <section className=\"charityRequest\">\n                    <div>\n\n              \n                   <img className=\"img\" src={charityRequest.user.url}/> \n                <h3>{charityRequest.user.tagName} needs {charityRequest.item}. \n                </h3>\n                    </div>\n                <div>The issue is \"{charityRequest.issue}\"</div>\n                {/* <div className=\"charityRequest__issue\">{charityRequest.issue}</div> */}\n                <div className=\"charityRequest__amount\">This will cost { charityRequest.amount } at { charityRequest.business.name }</div>\n                {/* <div className=\"charityRequest__business\">at { charityRequest.business.name }</div> */}\n                {activeUserRequests(charityRequest, history)}\n\n            </section>\n            </>\n        \n        )\n\n            \n}\n\n","  \nimport React, { useContext } from \"react\"\nimport { CharityRequestContext } from \"./CharityRequestProvider\"\nimport CharityRequest from \"./CharityRequest\"\nimport \"./CharityRequests.css\"\n\nexport default (props) => {\n\n    const { charityRequests } = useContext(CharityRequestContext)\n    const activeCharityRequest = charityRequests.sort(c => c.id === parseInt(localStorage.getItem(\"beyGood_user\")))\n    \n    return (\n        <>\n        <h1 className=\"donationHeader\">PENDING REQUESTS</h1>\n        <div className=\"charityRequests\">\n            {\n            activeCharityRequest.map(c => {\n\n               return <CharityRequest key={c.id} charityRequest={c} {...props} />\n                    \n                    \n            }\n               )}\n        </div>\n        </>\n    )\n}\n","import React, { useState, useEffect } from \"react\"\n\n/*\n    The context is imported and used by individual components\n    that need data\n*/\nexport const BusinessContext = React.createContext()\n\n/*\n This component establishes what data can be used.\n */\nexport const BusinessProvider = (props) => {\n    const [businesses, setBusinesses] = useState([])\n\n    const getBusinesses = () => {\n        return fetch(\"http://localhost:4444/businesses?_expand=businessType\")\n            .then(res => res.json())\n            .then(setBusinesses)\n    }\n\n    const addBusiness = business => {\n        return fetch(\"http://localhost:4444/businesses\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(business)\n        })\n            .then(getBusinesses)\n    }\n\n    const updateBusiness = business => {\n        return fetch(`http://localhost:4444/businesses/${business.id}`, {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(business)\n        })\n            .then(getBusinesses)\n    }\n\n    /*\n        Load all animals when the component is mounted. Ensure that\n        an empty array is the second argument to avoid infinite loop.\n    */\n    useEffect(() => {\n        getBusinesses()\n    }, [])\n\n    useEffect(() => {\n        console.log(\"****  Business APPLICATION STATE CHANGED  ****\")\n    }, [businesses])\n\n    return (\n        <BusinessContext.Provider value={{\n            businesses, addBusiness, updateBusiness\n        }}>\n            {props.children}\n        </BusinessContext.Provider>\n    )\n}","import React, { useContext, useState, useEffect, useRef } from \"react\"\nimport { CharityRequestContext } from \"./CharityRequestProvider\"\nimport \"./CharityRequests.css\"\nimport { BusinessContext } from \"../businesses/BusinessProvider\"\n// import { DonorContext } from \"../donations/DonationProvider\"\n\nexport default props => {\n    const { addCharityRequest, updateCharityRequest, charityRequests } = useContext(CharityRequestContext)\n    const { businesses } = useContext(BusinessContext)\n    const [charityRequest, setCharityRequest] = useState({})\n    // const [business, setBusiness] = useState({})\n    const business = useRef(0)\n\n\n    const editMode = props.match.params.hasOwnProperty(\"charityRequestId\")\n\n\n\n    const handleControlledInputChange = (evt) => {\n        /*\n            When changing a state object or array, always create a new one\n            and change state instead of modifying current one\n        */\n        const newCharityRequest = Object.assign({}, charityRequest)\n        newCharityRequest[evt.target.name] = evt.target.value\n        setCharityRequest(newCharityRequest)\n\n        // const newBusiness = Object.assign({}, business)\n        // newBusiness[evt.target.name] = evt.target.value\n        // setBusiness(newBusiness)\n    }\n\n    const setDefaults = () => {\n        if (editMode) {\n          \n            const charityRequestId = parseInt(props.match.params.charityRequestId)\n            const selectedCharityRequest = charityRequests.find(a => a.id === charityRequestId) || {}\n            setCharityRequest(selectedCharityRequest)\n        }\n    }\n\n    useEffect(() => {\n        setDefaults()\n    }, [charityRequests, businesses])\n\n    const constructNewCharityRequest = () => {\n\n        const businessId = parseInt(business.current.value)\n\n        if (editMode) {\n            updateCharityRequest({\n                id: charityRequest.id,\n                issue: charityRequest.issue,\n                amount: charityRequest.amount,\n                item: charityRequest.item,\n                businessId: businessId,\n                userId: parseInt(localStorage.getItem(\"beyGood_user\"), 10)\n            })\n                .then(() => props.history.push(\"/donor\"))\n        } else {\n            addCharityRequest({\n                issue: charityRequest.issue,\n                amount: charityRequest.amount,\n                item: charityRequest.item,\n                businessId: businessId,\n                userId: parseInt(localStorage.getItem(\"beyGood_user\"), 10)\n            })\n            \n            .then(() => props.history.push(\"/donor\"))\n        }\n        }\n    \n\n\n    return (\n        <form className=\"CharityRequestForm\">\n            <h2 className=\"CharityRequestForm__title\">{editMode ? \"EDIT CHARITY REQUEST\" : \"NEW CHARITY REQUEST\"}</h2>\n            <fieldset>\n\n            <div className=\"form-group\">\n                <label htmlFor=\"issue\">Issue</label>\n                <input\n                    type=\"text\"\n                    id=\"issue\"\n                    name=\"issue\"\n                    defaultValue={charityRequest.issue}\n                    required\n                    autoFocus\n                    className=\"form-control\"\n                    placeholder=\"Charity Request Issue\"\n                    proptype=\"varchar\"\n                    onChange={handleControlledInputChange}\n                    />\n            </div>\n                    </fieldset>\n                    <fieldset>\n                        \n            <div className=\"form-group\">\n                <label htmlFor=\"amount\">Amount</label>\n                <input\n                    type=\"text\"\n                    id=\"amount\"\n                    name=\"amount\"\n                    defaultValue={charityRequest.amount}\n                    required\n                    className=\"form-control\"\n                    proptype=\"varchar\"\n                    placeholder=\"Amount\"\n                    onChange={handleControlledInputChange}\n                    />\n            </div>\n            \n                    </fieldset>\n                    <fieldset>\n                        \n                        <div className=\"form-group\">\n                            <label htmlFor=\"item\">Item</label>\n                            <input\n                                type=\"text\"\n                                id=\"item\"\n                                name=\"item\"\n                                defaultValue={charityRequest.item}\n                                required\n                                className=\"form-control\"\n                                proptype=\"varchar\"\n                                placeholder=\"Item\"\n                                onChange={handleControlledInputChange}\n                                />\n                        </div>\n                        \n                                </fieldset>\n                    <fieldset>\n                <div className=\"form-group\">\n                    <label htmlFor=\"business\">Business </label>\n                    <select\n                        value={charityRequest.businessId}\n                        name=\"businessId\"\n                        ref={business}\n                        className=\"form-control\"\n                        onChange={handleControlledInputChange}\n                    >\n                        <option value=\"0\">Select a Business</option>\n                        {businesses.map(b => (\n                            <option key={b.id} value={b.id}>\n                                {b.name}\n                            </option>\n                              \n                        ))}\n                    </select>\n                </div>\n            </fieldset>\n                    \n            <button type=\"submit\" onClick={evt => \n                    {evt.preventDefault() \n                    constructNewCharityRequest()\n                    }}\n                className=\"btn btn-primary\"> {editMode ? \"Update Charity Request\": \"Make Charity Request\"} </button>\n        </form>\n    )\n}","import React from \"react\"\n\n\nexport default ({ donation }) => (\n    <section className=\"donation\">\n        <div>\n\n        {donation.user.tagName} \n        <div>\n                <img className=\"img\" src={donation.user.url}/> \n                </div>\n        </div>\n                \n        Thank you for your generous donation you made to { donation.user.tagName} for the amount of { donation.amount }! \n        The collaboration with { donation.business.name } helped {donation.user.tagName} tremendously.\n        <h3> DONOR: { donation.donor.tagName} \n                </h3>\n    </section>\n)\n\n// how do I render two seperate messages\n// when I delete request, it must stay on page and remove from both the charity page and database. ","import React, { useContext } from \"react\"\nimport { DonationContext } from \"./DonationProvider\"\nimport Donation from \"./Donation\"\nimport \"./Donations.css\"\nimport CharityRequest from \"../charity/CharityRequest\"\nimport { CharityRequestContext } from \"../charity/CharityRequestProvider\"\n\nexport default (props) => {\n    const { donations } = useContext(DonationContext)\n    const { charityRequests } = useContext(CharityRequestContext)\n    const activeUserDonations = donations.filter(d => d.donorId === parseInt(localStorage.getItem(\"beyGood_user\")))\n    const activeUserRequests = charityRequests.filter(cr => cr.userId === parseInt(localStorage.getItem(\"beyGood_user\")) )\n    const activeUserCompletedRequests = donations.filter(dr => dr.userId === parseInt(localStorage.getItem(\"beyGood_user\")) )\n\n    return (\n        <>\n        <section className=\"requests\">\n        <div className=\"pending\">\n    <div className=\"header\">\n        <h1>REQUESTS: PENDING</h1>\n        </div>\n            <div className=\"pendingCards\">\n            {activeUserRequests.map(cr => {\n                return <CharityRequest key={cr.id} charityRequest={cr} {...props} />\n            }) }\n            </div>\n            </div>\n            <div>\n\n           <div className=\"completed\">\n\n               <div className=\"header\">\n                   <h1>REQUESTS: COMPLETED</h1>\n                   </div> \n               </div>\n               <div className=\"completedCards\">\n\n    \n                {activeUserCompletedRequests.map(dr => {\n                    return <Donation key={dr.id} donation={dr} {...props} />\n                }) }\n                 \n                </div>\n                </div>\n        \n           <div>\n               <div className=\"header\">\n\n               <h1>YOUR DONATIONS</h1>\n               </div>\n            <div>\n                {activeUserDonations.map(d => {\n                    return <Donation key={d.id} donation={d} {...props} />\n                }) }\n                 \n                    </div> \n            </div>\n                </section>\n        </>\n    )\n}","import React, { useState, useEffect } from \"react\"\n\n/*\n    The context is imported and used by individual components\n    that need data\n*/\nexport const BusinessTypeContext = React.createContext()\n\n/*\n This component establishes what data can be used.\n */\nexport const BusinessTypeProvider = (props) => {\n    const [businessTypes, setBusinessTypes] = useState([])\n\n    const getBusinessTypes = () => {\n        return fetch(\"http://localhost:4444/businessTypes\")\n            .then(res => res.json())\n            .then(setBusinessTypes)\n    }\n\n    useEffect(() => {\n        getBusinessTypes()\n    }, [])\n\n    useEffect(() => {\n        // console.log(\"****  BUSINESS TYPE APPLICATION STATE CHANGED  ****\")\n    }, [businessTypes])\n\n    return (\n        <BusinessTypeContext.Provider value={{\n            businessTypes\n            // , addBusinessType, updateBusinessType\n        }}>\n            {props.children}\n        </BusinessTypeContext.Provider>\n    )\n}","import React, { useState, useEffect } from \"react\"\n\n/*\n    The context is imported and used by individual components\n    that need data\n*/\nexport const DonorContext = React.createContext()\n\n/*\n This component establishes what data can be used.\n */\nexport const DonorProvider = (props) => {\n    const [donors, setDonors] = useState([])\n\n    const getDonors = () => {\n        return fetch(\"http://localhost:4444/donors?_expand=user\")\n            .then(res => res.json())\n            .then(setDonors)\n    }\n\n    const addDonor = donor => {\n        return fetch(\"http://localhost:4444/donors\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(donor)\n        })\n            .then(getDonors)\n\n    }\n    useEffect(() => {\n        getDonors()\n    }, [])\n\n    useEffect(() => {\n        console.log(\"****  Donor APPLICATION STATE CHANGED  ****\")\n    }, [donors])\n\n    return (\n        <DonorContext.Provider value={{\n            donors, addDonor\n        }}>\n            {props.children}\n        </DonorContext.Provider>\n    )\n}","import React from \"react\"\n// import { UserProvider } from \"./users/UserProvider\"\nimport { CharityRequestProvider } from \"./charity/CharityRequestProvider\"\nimport { BusinessProvider } from \"./businesses/BusinessProvider\"\nimport { DonationProvider } from \"./donations/DonationProvider\"\nimport { BusinessTypeProvider } from \"./businesses/BusinessTypeProvider\"\nimport { DonorProvider } from \"./donations/DonorProvider\"\n\nexport default (props) => {\n    return (\n        <>\n            {/* <UserProvider> */}\n                <CharityRequestProvider>\n                        <DonationProvider>\n                                <DonorProvider>\n                            <BusinessTypeProvider>\n                                <BusinessProvider>\n                            {props.children}\n                                </BusinessProvider>\n                            </BusinessTypeProvider>\n                                </DonorProvider>\n                        </DonationProvider>\n                </CharityRequestProvider>\n            {/* </UserProvider> */}\n        </>\n    )\n}","import React from \"react\"\n// import \"./businesss.css\"\nimport { Link } from \"react-router-dom\"\n\nexport default ({ business }) => (\n    <div className=\"businesses\">\n       <div className=\"business__item\">\n       <div>\n           <h1 className=\"business__link\"><Link className=\"business__link\" to={`/businesses/${business.id}`}>{ business.name }</Link></h1>\n           </div> \n       <div>\n           <h2 className=\"business__link\">{ business.businessType.type }</h2>\n           </div> \n       </div>\n    </div>\n\n\n)","import React, { useContext } from \"react\"\nimport { BusinessContext } from \"./BusinessProvider\"\nimport Business from \"./Business\"\nimport \"./Businesses.css\"\nimport { BusinessTypeContext } from \"../businesses/BusinessTypeProvider\"\n\nexport default (props) => {\n    const { businesses } = useContext(BusinessContext)\n    const { businessTypes } = useContext(BusinessTypeContext)\n    console.log(businesses)\n\n    return (\n        <>\n        <div>\n\n        <h1 className=\"businessHeader\">\n            BUSINESS PARTNERS\n        </h1>\n        </div>\n        <div className=\"businesses\">\n            {\n                businesses.map(business => {\n                    const type = businessTypes.find(l => l.id === business.businessTypeId)\n                    console.log(businessTypes, businesses)\n                    \n                    return <Business key={business.id} \n                    businessType={type}\n                    business={business} />\n                    \n                })\n                \n            }\n    \n        </div>\n            </>\n             \n    )\n}\n","import React, { useContext } from \"react\"\nimport { CharityRequestContext } from \"../charity/CharityRequestProvider\"\nimport { DonationContext } from \"../donations/DonationProvider\"\nimport { BusinessContext } from \"./BusinessProvider\"\nimport \"./Businesses.css\"\nimport CharityRequest from \"../charity/CharityRequest\"\nimport Donation from \"../donations/Donation\"\n\nexport default (props) => {\n    const { businesses } = useContext(BusinessContext)\n    const { donations } = useContext(DonationContext)\n    const { charityRequests } = useContext(CharityRequestContext)\n\n    const chosenBusinessId = parseInt(props.match.params.businessId, 10)\n\n    const business = businesses.find(a => a.id === chosenBusinessId) || {}\n    const businessRequests = charityRequests.filter(b => b.businessId === chosenBusinessId)\n    const businessDonations = donations.filter(d => d.businessId === chosenBusinessId)\n\n    return (\n        <>\n        <div>\n\n        <section className=\"businessHeader\" >\n            <div>\n            <h1>{business.name}</h1>\n            </div>\n            <div>\n                \n            </div>\n          <h4 >Address: { business.address }</h4>\n        </section>\n        </div>\n            <div className=\"business__requests\">\n            {businessRequests.map(br => <CharityRequest key={br.id} charityRequest={br} />)}\n            {businessDonations.map(d => <Donation key={d.id} donation={d} />)}\n            </div>\n    </>\n    )\n}","import React from \"react\"\nimport { Route } from \"react-router-dom\"\nimport CharityRequestList from \"./charity/CharityRequestList\"\nimport CharityRequestForm from \"./charity/CharityRequestForm\"\nimport DonationList from \"./donations/DonationList\"\nimport ProviderProvider from \"./ProviderProvider\"\n// import DashboardList from \"./dashboard/DashboardList\"\nimport BusinessList from \"./businesses/BusinessList\"\nimport BusinessDetails from \"./businesses/BusinessDetails\"\n\n\nexport default props => {\n    return (\n        <>\n     <ProviderProvider>\n     <Route exact path=\"/business\" render={props => <BusinessList {...props} />} />\n\n     <Route exact path=\"/businesses/:businessId(\\d+)\" render={props => <BusinessDetails {...props} />} />\n        <Route exact path=\"/\" render={props => <CharityRequestForm {...props} />} />\n        <Route exact path=\"/\" render={props => <DonationList {...props} />} />\n        <Route exact path=\"/donor\" render={props => <CharityRequestList {...props} />} />\n        <Route path=\"/:charityRequestId(\\d+)\"render={props => <CharityRequestForm {...props} />} />\n\n\n        {/* <Route path=\"/edit/:charityRequestId(\\d+)\"render={props => <CharityRequestForm {...props} />} /> */}\n\n</ProviderProvider>\n\n</>\n)\n}","import React from \"react\"\nimport { Link } from \"react-router-dom\"\nimport \"./NavBar.css\"\nimport logo from \"./logo.jpg\"\n\nexport default (props) => {\n    return (\n        <ul className=\"navbar\">\n           \n                <Link className=\"navbar__link\" to=\"/\">\n                <img src={logo}/>\n                </Link>\n                \n            <li className=\"navbar__item\">\n                <Link className=\"navbar__link\" to=\"/donor\">MAKE A DONATION</Link>\n            </li>\n            <li className=\"navbar__item\">\n                <Link className=\"navbar__link\" to=\"/business\">BUSINESS PARTNERS</Link>\n            </li>\n\n\n{\n    localStorage.getItem(\"beyGood_user\")\n        ? <li className=\"navbar__item\">\n            <Link className=\"navbar__link\"\n                to=\"\"\n                onClick={e => {\n                    e.preventDefault()\n                    localStorage.removeItem(\"beyGood_user\")\n                    props.history.push(\"/\")\n                }}\n            >Logout</Link>\n        </li>\n        : \"\"\n}\n        </ul>\n    )\n}","import React, { useRef } from \"react\"\nimport { Link } from \"react-router-dom\";\nimport \"./Logins.css\"\nimport logo from \"../nav/logo.jpg\"\n\n\nconst Login = props => {\n    const tagName = useRef()\n    const password = useRef()\n\n    const existingUserCheck = () => {\n        return fetch(`http://localhost:4444/users?tagName=${tagName.current.value}`)\n            .then(_ => _.json())\n            .then(user => {\n                if (user.length) {\n                    return user[0]\n                }\n                return false\n            })\n    }\n\n    const handleLogin = (e) => {\n        e.preventDefault()\n\n        existingUserCheck()\n            .then(exists => {\n                if (exists && exists.password === password.current.value) {\n                    localStorage.setItem(\"beyGood_user\", exists.id)\n                    props.history.push(\"/\")\n                } else if (exists && exists.password !== password.current.value) {\n                    window.alert(\"Password does not match\")\n                } else if (!exists) {\n                    fetch(\"http://localhost:4444/users\", {\n                        method: \"POST\",\n                        headers: {\n                            \"Content-Type\": \"application/json\"\n                        },\n                        body: JSON.stringify({\n                            tagName: tagName.current.value,\n                            password: password.current.value,\n                        })\n                    })\n                        .then(_ => _.json())\n                        .then(response => {\n                            localStorage.setItem(\"beyGood_user\", response.id)\n                            props.history.push(\"/\")\n                        })\n                }\n            })\n    }\n\n    return (\n        <main className=\"container--login\">\n            <section>\n                <form className=\"form--login\" onSubmit={handleLogin}>\n                    <h1><img src={logo}/></h1>\n                    <h2>Please sign in</h2>\n                    <fieldset>\n                        <label htmlFor=\"inputtagName\"> Tag Name </label>\n                        <input ref={tagName} type=\"tagName\"\n                            id=\"tagName\"\n                            className=\"form-control\"\n                            placeholder=\"Enter Tag Name Here\"\n                            required autoFocus />\n                    </fieldset>\n                    <fieldset>\n                        <label htmlFor=\"inputPassword\"> Password </label>\n                        <input ref={password} type=\"password\"\n                            id=\"password\"\n                            className=\"form-control\"\n                            placeholder=\"Enter Password Here\"\n                            required />\n                    </fieldset>\n                    <fieldset>\n                        <button type=\"submit\">\n                            Sign in\n                    </button>\n                    </fieldset>\n                </form>\n            </section>\n            <section className=\"link--register\">\n                <Link to=\"/register\">Not a member yet?</Link>\n            </section>\n        </main>\n    )\n}\nexport default Login","import React, { useRef } from \"react\"\nimport \"./Logins.css\"\n\nconst Register = props => {\n    const tagName = useRef()\n    const password = useRef()\n    const verifyPassword = useRef()\n\n    const existingUserCheck = () => {\n        return fetch(`http://localhost:4444/users?tagName=${tagName.current.value}`)\n            .then(_ => _.json())\n            .then(user => {\n                if (user.length) {\n                    return true\n                }\n                return false\n            })\n    }\n\n    const handleRegister = (e) => {\n        e.preventDefault()\n\n        if (password.current.value === verifyPassword.current.value) {\n            existingUserCheck()\n                .then(() => {\n                    fetch(\"http://localhost:4444/users\", {\n                        method: \"POST\",\n                        headers: {\n                            \"Content-Type\": \"application/json\"\n                        },\n                        body: JSON.stringify({\n                            tagName: tagName.current.value,\n                            password: password.current.value,\n                        })\n                    })\n                        .then(_ => _.json())\n                        .then(createdUser => {\n                            if (createdUser.hasOwnProperty(\"id\")) {\n                                localStorage.setItem(\"beyGood_user\", createdUser.id)\n                                props.history.push(\"/\")\n                            }\n                        })\n                })\n        } else {\n            window.alert(\"Passwords do not match\")\n        }\n    }\n\n    return (\n        <main style={{ textAlign: \"center\" }}>\n            <form className=\"form--login\" onSubmit={handleRegister}>\n                <h1 className=\"h3 mb-3 font-weight-normal\">Please Register for beyGood</h1>\n                <fieldset>\n                    <label htmlFor=\"inputtagName\"> Tag Name </label>\n                    <input ref={tagName} type=\"tagName\"\n                        name=\"tagName\"\n                        className=\"form-control\"\n                        placeholder=\"Tag Name\"\n                        required />\n                </fieldset>\n                <fieldset>\n                    <label htmlFor=\"inputPassword\"> Password </label>\n                    <input ref={password} type=\"password\"\n                        name=\"password\"\n                        className=\"form-control\"\n                        placeholder=\"Password\"\n                        required />\n                </fieldset>\n                <fieldset>\n                    <label htmlFor=\"verifyPassword\"> Verify Password </label>\n                    <input ref={verifyPassword} type=\"password\"\n                        name=\"verifyPassword\"\n                        className=\"form-control\"\n                        placeholder=\"Verify password\"\n                        required />\n                </fieldset>\n                <fieldset>\n                    <button type=\"submit\">\n                        Sign in\n                    </button>\n                </fieldset>\n            </form>\n        </main>\n    )\n}\n\nexport default Register","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { BrowserRouter as Router } from \"react-router-dom\"\nimport BeyGood from \"./components/BeyGood\"\nimport './custom.scss';\n// import { TrackerProvider, Tracker } from 'react-tracker'\n// import { trackProductClick } from './tracking/donationsAndRequests/completed'\n\n// const tracker = new Tracker([trackProductClick])\n\nReactDOM.render(\n    <Router>\n        {/* <TrackerProvider> */}\n        <BeyGood/>\n        {/* </TrackerProvider> */}\n    </Router>\n    , document.getElementById(\"root\"))","import React from \"react\"\nimport { Route, Redirect } from \"react-router-dom\"\nimport ApplicationViews from \"./ApplicationViews\"\nimport NavBar from \"./nav/NavBar\"\nimport Login from \"./auth/Login\"\nimport Register from \"./auth/Register\"\nimport \"./BeyGood.css\"\n\nexport default () => (\n    <>\n        <Route \n        render={() => {\n            if (localStorage.getItem(\"beyGood_user\")) {\n                return (\n                    <>\n                        <Route render={props => <NavBar {...props} />} />\n                        <Route render={props => <ApplicationViews {...props} />} />\n                    </>\n                )\n            } else {\n                return <Redirect to=\"/login\" />\n            }\n        }} \n        />\n\n        <Route path=\"/login\" render={props => <Login {...props} />} />\n        <Route path=\"/register\" render={props => <Register {...props} />} />\n    </>\n)"],"sourceRoot":""}